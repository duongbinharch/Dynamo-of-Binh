{
  "Uuid": "4d69edc2-deae-487b-bbd1-040a0783bbfe",
  "IsCustomNode": false,
  "Description": "",
  "Name": "00BinhDUONG - Floor - Standardization with catalogue of all existing floor types",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "958ee2e0ef7745da8d10acaed91757e7",
      "Name": "Element Types",
      "Type": "dropdownSelection",
      "Value": "FloorType",
      "Description": "All element subtypes.",
      "SelectedIndex": 140
    },
    {
      "Id": "291c06515d5e4bd0acae1a2f586dccf7",
      "Name": "Space",
      "Type": "number",
      "Value": "3000",
      "MaximumValue": 10000.0,
      "MinimumValue": 500.0,
      "StepValue": 100.0,
      "NumberType": "Double",
      "Description": "A slider that produces numeric values.",
      "SelectedIndex": 0
    },
    {
      "Id": "cc34f40c892c496192b0aefdb414a56b",
      "Name": "Size of Square",
      "Type": "number",
      "Value": "2000",
      "MaximumValue": 5000.0,
      "MinimumValue": 0.0,
      "StepValue": 100.0,
      "NumberType": "Double",
      "Description": "A slider that produces numeric values.",
      "SelectedIndex": 0
    },
    {
      "Id": "b4fac64e188041a6b74a308d68a342d1",
      "Name": "Select location line",
      "Type": "hostSelection",
      "Value": "8a18e140-ebe6-49f7-922b-68b8aa83579f-0016a68f",
      "Description": "Select a model element from the document.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "DSRevitNodesUI.ElementTypes, DSRevitNodesUI",
      "SelectedIndex": 140,
      "SelectedString": "FloorType",
      "NodeType": "ExtensionNode",
      "Id": "958ee2e0ef7745da8d10acaed91757e7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8af627e3b4114fbbb98bbb06f2989182",
          "Name": "Types",
          "Description": "The selected Types",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All element subtypes."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfType, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "20ec62c5bd344795a06db97bdfdb1066",
      "Inputs": [
        {
          "Id": "eb0e77f510fd4d7dbf0fd31ed330670a",
          "Name": "element type",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0143d593b897493eb826d3b1c6ee3e94",
          "Name": "elements",
          "Description": "All elements in the active document of a given type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All elements in the active document of a given type."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "7e5f56b9c00646a5a5df82ae3c8ebca4",
      "Inputs": [
        {
          "Id": "28f2f27e324a4995814d26b381847222",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "156a78a6102041cb8fa34a6d347fb31a",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Sequence, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "68da1a1eea3440ad8e3781edaccddf88",
      "Inputs": [
        {
          "Id": "0621600cb5de4b5d9a0a3247bd60e742",
          "Name": "start",
          "Description": "Number or letter to start the sequence at\r\nDefault value: 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "29239e922b87485baf146f7397b5186b",
          "Name": "amount",
          "Description": "Amount of numbers or letters in the sequence\r\nDefault value: 10",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6e749a0764747478430802363a4899a",
          "Name": "step",
          "Description": "Space between numbers or letters\r\nDefault value: 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43f3c51f7d1546cca17bcc26fc1141fb",
          "Name": "list",
          "Description": "New list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a sequence of numbers."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 10000.0,
      "MinimumValue": 500.0,
      "StepValue": 100.0,
      "InputValue": 3000.0,
      "Id": "291c06515d5e4bd0acae1a2f586dccf7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6213f25d26e04632a65bbdbae562ad5b",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces numeric values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Id": "7117c1db273543e7a0acc0d40a5bd876",
      "Inputs": [
        {
          "Id": "bc6c4f93d22b49818b9dfaeb3e18d225",
          "Name": "x",
          "Description": "X coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bf1e1247337a4bbc8d9dbebf11ad556f",
          "Name": "y",
          "Description": "Y coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53950d3593d840cd8153fe36bde1a87a",
          "Name": "z",
          "Description": "Z coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be3589109bb440ebb1d5674b1c328ca1",
          "Name": "Point",
          "Description": "Point created by coordinates",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Floor.ByOutlineTypeAndLevel@Autodesk.DesignScript.Geometry.Curve[],Revit.Elements.FloorType,Revit.Elements.Level",
      "Id": "7b20b0a278864d52a4f67ab91c2a30af",
      "Inputs": [
        {
          "Id": "84ae5f94b63b43c8bed56e603efdcb46",
          "Name": "outlineCurves",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bff7ac8c86624853bf60d790763f5454",
          "Name": "floorType",
          "Description": "FloorType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ba7baa501644b50a5e111050e89ad5d",
          "Name": "level",
          "Description": "Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d357ddd8db84329af7982de3f643f97",
          "Name": "Floor",
          "Description": "The floor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit Floor given its curve outline and Level\n\nFloor.ByOutlineTypeAndLevel (outlineCurves: Curve[], floorType: FloorType, level: Level): Floor"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Levels, DSRevitNodesUI",
      "SelectedIndex": 1,
      "SelectedString": "L0 - Ground Floor FFL",
      "NodeType": "ExtensionNode",
      "Id": "76d5f937bee34a7fa9f9c95907a24ce5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "61112a702ed847258942a7831657da67",
          "Name": "Levels",
          "Description": "The selected Levels",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a level in the active document"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Rectangle.ByCornerPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "c5afad838cc847289e245af87bcf6313",
      "Inputs": [
        {
          "Id": "c5e4921962dc46dc9f16bbaf81d634cc",
          "Name": "points",
          "Description": "List of corner points of rectangle\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "68c3e3817a0841c481b7ae756a5c996d",
          "Name": "Rectangle",
          "Description": "Rectangle created by corner points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Rectangle by four corner Points.\n\nRectangle.ByCornerPoints (points: Point[]): Rectangle"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "c96563fcaab64120a68ecca1f9250fa1",
      "Inputs": [
        {
          "Id": "0c46db27a9b545d3bd2cca4caaad8bd9",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6a14cc2c2859408d8632c4fe4856aacf",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e7854e1b7204c089b82b7df95880c14",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bcb20e159af74cdaaf0caa3beda8c7f0",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9780f38f9921407d9adad6f3ffd10fe7",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.X+dis;\nx.Y;\nx.Z;",
      "Id": "0ff914c08c37419eaaafbcb710868b3b",
      "Inputs": [
        {
          "Id": "65221466b8fd4bb5bcaa750539b2b1fc",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3df441aa21594fe1a3b6f561991a92d6",
          "Name": "dis",
          "Description": "dis",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "56800033f3ac422985c9e896234f582b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bf2aaf7351e4422b80b8743ad8b90b5b",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dc4f88af11864a299188ba7b00edafc7",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Id": "8a31958c6ade403d87ade55517941cf6",
      "Inputs": [
        {
          "Id": "68a7d7e37381441b8086ecabef9da4f9",
          "Name": "x",
          "Description": "X coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c7142cfe9889438a98a0ea12ccb2f19d",
          "Name": "y",
          "Description": "Y coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a028a39b3388437e9f39cff06fe3abbc",
          "Name": "z",
          "Description": "Z coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21ab78afb6a0470ba1a21eac826c0a0a",
          "Name": "Point",
          "Description": "Point created by coordinates",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "5197dacf8d744df08bcc9ffab099406e",
      "Inputs": [
        {
          "Id": "251b76028896411c98229af171f3cce3",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3eb95680dab44c7694c311d961349936",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.X+dis;\nx.Y-dis;\nx.Z;",
      "Id": "e47cfb63755443359fc53eae9952c528",
      "Inputs": [
        {
          "Id": "9e50755a35fa4c43ac3df43d8721d56c",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f198de544e384dfeb2d2fe2535e34042",
          "Name": "dis",
          "Description": "dis",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7ccab28e781243f0984a96673b952dc9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "19a95c5086c24a1c9001bf5c0c8bf5a0",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "de9bfc9d194949d890bd3370843be47d",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Id": "bc9da5b0ec514e6ab477e3463002b14f",
      "Inputs": [
        {
          "Id": "1876e77e4b2e4b2da747c607b38c94bf",
          "Name": "x",
          "Description": "X coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cae26a9b67574c43814125c65c500c8e",
          "Name": "y",
          "Description": "Y coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2dfcbd08a4824b3bb288f90ab0e1c9cd",
          "Name": "z",
          "Description": "Z coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e9575cfe68747cab7e8ac44af6054f8",
          "Name": "Point",
          "Description": "Point created by coordinates",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.X;\nx.Y-dis;\nx.Z;",
      "Id": "b9f03610ba83430aae100ff838ce0412",
      "Inputs": [
        {
          "Id": "5c9fbbb177f445d19164aab0f9965752",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb90bad2192a474fba3757060129c521",
          "Name": "dis",
          "Description": "dis",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3e2accee8c144d583af17500c9c997d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a3acd1e56a24df699f9430d56dd96ac",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb9e1dae9f484028849ef8f19564a201",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Id": "e2106c4deee24ee3b85854fc557e7034",
      "Inputs": [
        {
          "Id": "17ca19d56e7048cbb3a8aabfeadbb61d",
          "Name": "x",
          "Description": "X coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0e6a2b876af46878e9d5d8a7eff8c61",
          "Name": "y",
          "Description": "Y coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d9c38e74cd8045f19a73129660a101b6",
          "Name": "z",
          "Description": "Z coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "36280db86b2a4f639ab18b386876c044",
          "Name": "Point",
          "Description": "Point created by coordinates",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 5000.0,
      "MinimumValue": 0.0,
      "StepValue": 100.0,
      "InputValue": 2000.0,
      "Id": "cc34f40c892c496192b0aefdb414a56b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1dbd725638724b2b99481e3baf14975d",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces numeric values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.Curves",
      "Id": "bf0fefe383d849d68bfe8de80b6ea306",
      "Inputs": [
        {
          "Id": "3d8bfca4bb2d44f6b7a3d6b9070b10a9",
          "Name": "polyCurve",
          "Description": "Autodesk.DesignScript.Geometry.PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7663f55353ce46c08b76c83dd849d763",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns curves of the polycurve\n\nPolyCurve.Curves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "8a18e140-ebe6-49f7-922b-68b8aa83579f-0016a68f"
      ],
      "Id": "b4fac64e188041a6b74a308d68a342d1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d5abbfabb219428795b604b6fa923550",
          "Name": "Element",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Geometry",
      "Id": "03c6901a3a6c4fbd8766ec771118873b",
      "Inputs": [
        {
          "Id": "4d40e595a0234e37a4102a7f34cb1ea7",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5b47092cdea44e859cad6ca5baf0946e",
          "Name": "var[]",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get all of the Geometry associated with this object\n\nElement.Geometry ( ): var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "c5d2765e0fa148e1a82823b2f7e77ae4",
      "Inputs": [
        {
          "Id": "c47a31a0f686437190902595db812c23",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "93fba069208a48cdb6ec066bae9e6c30",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.X;\nx.Y;\nx.Z;",
      "Id": "e0ed7cf58c5b4792b1d6482c6b45803d",
      "Inputs": [
        {
          "Id": "018fdb1b55114572a214a8e56c44afb4",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad71ac790925448a8ce28cc1bf6e8235",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4dfa6fdcf7a94f668b89e2399286d0a0",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "03b8952f23274905bc8a5f202c364f4b",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "cf552aede4274588a22ca9354a0b07bc",
      "Inputs": [
        {
          "Id": "9fc3bb2f5f45429a97734be9aca73139",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "591187ff0f49462284d78441ca6fbfc8",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ab225cb48e1d462dad85c726654ecc3e",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "19aaacfe55e844d08399f700e1fedadd",
      "Inputs": [
        {
          "Id": "0387ef99b5b54133ac78579d187d7f9e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "948c248264194d5f833c9a20b25f0b56",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "08c6dca4e1e6461286b178451901783e",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "65ef2a23de83497c807bb3ed033cf8c0",
      "Inputs": [
        {
          "Id": "a07b72ef1a6d41b1a179eb7875553a48",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06df9045028c4cfdac18488002f14c79",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aba9d4f4bf3b4b57a74226cfb7e28303",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "03bb188fc5f64b17ba3734440aff980d",
      "Inputs": [
        {
          "Id": "55e09d4716ac48ccbd5985548e7c320b",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "165311782aed4f9a9935e3abbb1294ed",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59a769bc323146b0a3d5419fb21d150e",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "1963a084dbf3431993d0e25f8298a73e",
      "Inputs": [
        {
          "Id": "c1d40851b0254aa586e17d6d4f8772b6",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f7ffd01a81144c86b320b5e87b799b26",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "7c0de710b6834903bd349d1880783e34",
      "Inputs": [
        {
          "Id": "dbee2857d4fd420e9de3b0ccbd3bae57",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "618d2dab9bb64ef9ab6fc44d071c5dc8",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b50d188706c40819db5b5e00486c09f",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.TakeItems@var[]..[],int",
      "Id": "7dd4f106047c43c88065ad1b692ae068",
      "Inputs": [
        {
          "Id": "db1b9a8f622f4ad7b8bead28693df8d0",
          "Name": "list",
          "Description": "List to take from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "51bacbfd86384c049e1306021c8f84ea",
          "Name": "amount",
          "Description": "Amount of items to take. If negative, items are taken from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "48b9885cca094f39b7b2f69c5600ead5",
          "Name": "list",
          "Description": "List of extracted items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Fetches an amount of items from the start of the list.\n\nList.TakeItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x*-1;",
      "Id": "602dfd817348485685972c28769b7342",
      "Inputs": [
        {
          "Id": "7f5ba4b9f91c4587ab1f4c1089b9e66c",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ae95f490c3784c74bc215442cdae5184",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.SegmentLengthAtParameter@double",
      "Id": "e28e8d7e93bc438c9697721c67592a54",
      "Inputs": [
        {
          "Id": "4274c13592f34460925659c0697aa596",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a0fe9460fde74b6785f56a63f91d1a30",
          "Name": "parameter",
          "Description": "Value between 0-1\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e72bd514796740c68dbaa5140fc4bfa2",
          "Name": "double",
          "Description": "Segment length",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the segment length measured from the start point of the curve to the given parameter.\n\nCurve.SegmentLengthAtParameter (parameter: double = 0): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "97e21d052db1488d8ee524da10b2db43",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1b03d9d6eeaf44cbb9b2d1cdae997593",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x/y;",
      "Id": "c461dd1e5c724c69b1f454f24ef34729",
      "Inputs": [
        {
          "Id": "6a374c12e7c942cbbbdea1b022225fd1",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d3534fb59e849cea56aa67c1a9c9dbc",
          "Name": "y",
          "Description": "y",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "297d994db4f14f1d9f099f544ab7a54d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Floor@double",
      "Id": "ac7bfc7219914b6eb80c88dd0cf4bfd4",
      "Inputs": [
        {
          "Id": "eb99b2b131684ba89bd4a2344288ecaf",
          "Name": "number",
          "Description": "Number to round down\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d9c77b2bd5741d19162adfe3b9b847e",
          "Name": "int",
          "Description": "First integer smaller than the number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first integer smaller than the number.\n\nMath.Floor (number: double): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "765bfe9d89ea4240a9dd3602ca651d46",
      "Inputs": [
        {
          "Id": "b0df423d809d41d88117075b0e6654ee",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aa01bd4f0efe4ad3ae05999b4e935de4",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "8af627e3b4114fbbb98bbb06f2989182",
      "End": "eb0e77f510fd4d7dbf0fd31ed330670a",
      "Id": "8ee456451a2e4825b74e5f56d9019310"
    },
    {
      "Start": "0143d593b897493eb826d3b1c6ee3e94",
      "End": "28f2f27e324a4995814d26b381847222",
      "Id": "f1b94dc776644d6d978b68349bfec3b4"
    },
    {
      "Start": "0143d593b897493eb826d3b1c6ee3e94",
      "End": "bff7ac8c86624853bf60d790763f5454",
      "Id": "b93a99d9598447d38475b3d36ee2af71"
    },
    {
      "Start": "156a78a6102041cb8fa34a6d347fb31a",
      "End": "51bacbfd86384c049e1306021c8f84ea",
      "Id": "bd6ef7a6d6ae412ab6b2b3baaa2d9766"
    },
    {
      "Start": "43f3c51f7d1546cca17bcc26fc1141fb",
      "End": "591187ff0f49462284d78441ca6fbfc8",
      "Id": "1073824efbec4c188b527ebf9934e6eb"
    },
    {
      "Start": "43f3c51f7d1546cca17bcc26fc1141fb",
      "End": "7f5ba4b9f91c4587ab1f4c1089b9e66c",
      "Id": "c62a88068115498086b01dc3acb57c19"
    },
    {
      "Start": "6213f25d26e04632a65bbdbae562ad5b",
      "End": "c6e749a0764747478430802363a4899a",
      "Id": "def9ae0a7d574b58b9a127078fc06700"
    },
    {
      "Start": "6213f25d26e04632a65bbdbae562ad5b",
      "End": "5d3534fb59e849cea56aa67c1a9c9dbc",
      "Id": "847049ff281747adbfc61a21ead2ab7a"
    },
    {
      "Start": "be3589109bb440ebb1d5674b1c328ca1",
      "End": "b0df423d809d41d88117075b0e6654ee",
      "Id": "72f342a44f2143928c665f1e979c41be"
    },
    {
      "Start": "61112a702ed847258942a7831657da67",
      "End": "9ba7baa501644b50a5e111050e89ad5d",
      "Id": "0d0de20269e74b1db2addbb8f2c6a131"
    },
    {
      "Start": "68c3e3817a0841c481b7ae756a5c996d",
      "End": "3d8bfca4bb2d44f6b7a3d6b9070b10a9",
      "Id": "c6b8b54d3d7b4c46acbed39a935ea9c5"
    },
    {
      "Start": "9780f38f9921407d9adad6f3ffd10fe7",
      "End": "251b76028896411c98229af171f3cce3",
      "Id": "bbf3518fdcb24bbfaf3e98863f8d6875"
    },
    {
      "Start": "56800033f3ac422985c9e896234f582b",
      "End": "68a7d7e37381441b8086ecabef9da4f9",
      "Id": "e5d0f84728d84c4d8432c8cb5b56257c"
    },
    {
      "Start": "bf2aaf7351e4422b80b8743ad8b90b5b",
      "End": "c7142cfe9889438a98a0ea12ccb2f19d",
      "Id": "2ceda66aad6b4b6583a04243641c90cc"
    },
    {
      "Start": "dc4f88af11864a299188ba7b00edafc7",
      "End": "a028a39b3388437e9f39cff06fe3abbc",
      "Id": "f2ad582577094e3f8e74bb0a9214f59d"
    },
    {
      "Start": "21ab78afb6a0470ba1a21eac826c0a0a",
      "End": "6a14cc2c2859408d8632c4fe4856aacf",
      "Id": "edcf8a352cb2488ca5404090308f6e64"
    },
    {
      "Start": "3eb95680dab44c7694c311d961349936",
      "End": "db1b9a8f622f4ad7b8bead28693df8d0",
      "Id": "de728aada16341738d99379acbbd93a4"
    },
    {
      "Start": "7ccab28e781243f0984a96673b952dc9",
      "End": "1876e77e4b2e4b2da747c607b38c94bf",
      "Id": "e54d5c90843f40209e558a60e74e764d"
    },
    {
      "Start": "19a95c5086c24a1c9001bf5c0c8bf5a0",
      "End": "cae26a9b67574c43814125c65c500c8e",
      "Id": "4bcf2c502e6c4b469254019c98165d4d"
    },
    {
      "Start": "de9bfc9d194949d890bd3370843be47d",
      "End": "2dfcbd08a4824b3bb288f90ab0e1c9cd",
      "Id": "7b57432608904900b764c900fa8226f5"
    },
    {
      "Start": "9e9575cfe68747cab7e8ac44af6054f8",
      "End": "2e7854e1b7204c089b82b7df95880c14",
      "Id": "27e0e26b20e54878a18990fa20731a00"
    },
    {
      "Start": "d3e2accee8c144d583af17500c9c997d",
      "End": "17ca19d56e7048cbb3a8aabfeadbb61d",
      "Id": "1dc6fe1be6004ee99c6610059bc5cc17"
    },
    {
      "Start": "4a3acd1e56a24df699f9430d56dd96ac",
      "End": "f0e6a2b876af46878e9d5d8a7eff8c61",
      "Id": "c3b61e0e2f8b4e5f990acc7845d0c0d2"
    },
    {
      "Start": "bb9e1dae9f484028849ef8f19564a201",
      "End": "d9c38e74cd8045f19a73129660a101b6",
      "Id": "e6802bab2a6e4f048cbb4cbed3882264"
    },
    {
      "Start": "36280db86b2a4f639ab18b386876c044",
      "End": "bcb20e159af74cdaaf0caa3beda8c7f0",
      "Id": "611ecdb85e5c4a4dbf10027f57aeb8e5"
    },
    {
      "Start": "1dbd725638724b2b99481e3baf14975d",
      "End": "3df441aa21594fe1a3b6f561991a92d6",
      "Id": "adf0fd0d94b54577a29d9b54942e2ad2"
    },
    {
      "Start": "1dbd725638724b2b99481e3baf14975d",
      "End": "f198de544e384dfeb2d2fe2535e34042",
      "Id": "840186df29094cb0a7406e5276f82f2b"
    },
    {
      "Start": "1dbd725638724b2b99481e3baf14975d",
      "End": "fb90bad2192a474fba3757060129c521",
      "Id": "f93e1982750c49db9cde3977cc2f09e6"
    },
    {
      "Start": "7663f55353ce46c08b76c83dd849d763",
      "End": "84ae5f94b63b43c8bed56e603efdcb46",
      "Id": "55065c088b7448198a8c6dd25f5eeb65"
    },
    {
      "Start": "d5abbfabb219428795b604b6fa923550",
      "End": "4d40e595a0234e37a4102a7f34cb1ea7",
      "Id": "1773fca9cf8f4010acafe07bbadaf44e"
    },
    {
      "Start": "5b47092cdea44e859cad6ca5baf0946e",
      "End": "c47a31a0f686437190902595db812c23",
      "Id": "d6973efd23bc4da3888951cf4b156c4f"
    },
    {
      "Start": "5b47092cdea44e859cad6ca5baf0946e",
      "End": "4274c13592f34460925659c0697aa596",
      "Id": "f4f7304916944743a0af41ecd0a8fd71"
    },
    {
      "Start": "93fba069208a48cdb6ec066bae9e6c30",
      "End": "018fdb1b55114572a214a8e56c44afb4",
      "Id": "e7bf99f9ef864b8aba9cb695fcc7e4fd"
    },
    {
      "Start": "ad71ac790925448a8ce28cc1bf6e8235",
      "End": "9fc3bb2f5f45429a97734be9aca73139",
      "Id": "25e7dc4e47fc4e1783c26b428bbfd842"
    },
    {
      "Start": "4dfa6fdcf7a94f668b89e2399286d0a0",
      "End": "a07b72ef1a6d41b1a179eb7875553a48",
      "Id": "9d3b1d77c04541a5877708c59b35154a"
    },
    {
      "Start": "ab225cb48e1d462dad85c726654ecc3e",
      "End": "0387ef99b5b54133ac78579d187d7f9e",
      "Id": "b492e9f04bba44c99c589c400c0d1a77"
    },
    {
      "Start": "08c6dca4e1e6461286b178451901783e",
      "End": "bc6c4f93d22b49818b9dfaeb3e18d225",
      "Id": "5257a291807d45b0a19e6150cc59a9cf"
    },
    {
      "Start": "aba9d4f4bf3b4b57a74226cfb7e28303",
      "End": "55e09d4716ac48ccbd5985548e7c320b",
      "Id": "1f3e0c0b79364c1da61f119a8d4a0732"
    },
    {
      "Start": "59a769bc323146b0a3d5419fb21d150e",
      "End": "bf1e1247337a4bbc8d9dbebf11ad556f",
      "Id": "8b7c3819494c4dd2abab5397790a5c2d"
    },
    {
      "Start": "f7ffd01a81144c86b320b5e87b799b26",
      "End": "0c46db27a9b545d3bd2cca4caaad8bd9",
      "Id": "7073a84f318f4f4c9d4ddbf9f654ad33"
    },
    {
      "Start": "f7ffd01a81144c86b320b5e87b799b26",
      "End": "65221466b8fd4bb5bcaa750539b2b1fc",
      "Id": "c41568aed324496eac55c9df3042f67d"
    },
    {
      "Start": "f7ffd01a81144c86b320b5e87b799b26",
      "End": "9e50755a35fa4c43ac3df43d8721d56c",
      "Id": "4c18dd4bf33e488dbe4b5d7431e4bfb5"
    },
    {
      "Start": "f7ffd01a81144c86b320b5e87b799b26",
      "End": "5c9fbbb177f445d19164aab0f9965752",
      "Id": "5b5ff4d0ad8544ab9b3431814b98dfd6"
    },
    {
      "Start": "7b50d188706c40819db5b5e00486c09f",
      "End": "c1d40851b0254aa586e17d6d4f8772b6",
      "Id": "2c30f42419714abc95deda68dccef6b1"
    },
    {
      "Start": "48b9885cca094f39b7b2f69c5600ead5",
      "End": "c5e4921962dc46dc9f16bbaf81d634cc",
      "Id": "c7b3913e011e485786a2326c0852751b"
    },
    {
      "Start": "ae95f490c3784c74bc215442cdae5184",
      "End": "06df9045028c4cfdac18488002f14c79",
      "Id": "3d84f13650e9432892a5cfa8b4cd646e"
    },
    {
      "Start": "e72bd514796740c68dbaa5140fc4bfa2",
      "End": "6a374c12e7c942cbbbdea1b022225fd1",
      "Id": "e4540e8bce88471c8268544238c030f3"
    },
    {
      "Start": "1b03d9d6eeaf44cbb9b2d1cdae997593",
      "End": "a0fe9460fde74b6785f56a63f91d1a30",
      "Id": "51479ee5e8804d98b758a3f6cc950ed9"
    },
    {
      "Start": "297d994db4f14f1d9f099f544ab7a54d",
      "End": "eb99b2b131684ba89bd4a2344288ecaf",
      "Id": "98a3e2ad801e4fcfb7be113a4c1463d7"
    },
    {
      "Start": "9d9c77b2bd5741d19162adfe3b9b847e",
      "End": "29239e922b87485baf146f7397b5186b",
      "Id": "978753e436904207a10b8ee4424a4a8c"
    },
    {
      "Start": "aa01bd4f0efe4ad3ae05999b4e935de4",
      "End": "dbee2857d4fd420e9de3b0ccbd3bae57",
      "Id": "fe85fca0d12b4ac5b166072318568591"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.12",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "1.10",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [
    {
      "NodeId": "7b20b0a2-7886-4d52-a4f6-7ab91c2a30af",
      "Binding": {
        "ByOutlineTypeAndLevel_InClassDecl-1_InFunctionScope-1_Instance0_7b20b0a2-7886-4d52-a4f6-7ab91c2a30af": ""
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 10000.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.1.8246",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 130332.546875,
      "EyeY": 50340.78125,
      "EyeZ": 21233.46484375,
      "LookX": 45839.703125,
      "LookY": -50340.78125,
      "LookZ": -30699.01171875,
      "UpX": 0.41544118523597717,
      "UpY": 0.86602520942687988,
      "UpZ": -0.27822482585906982
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Element Types",
        "Id": "958ee2e0ef7745da8d10acaed91757e7",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -354.568533566159,
        "Y": 1101.2034153216925
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Type",
        "Id": "20ec62c5bd344795a06db97bdfdb1066",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -79.568533566158976,
        "Y": 1101.2034153216925
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "7e5f56b9c00646a5a5df82ae3c8ebca4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 208.85360424490659,
        "Y": 1017.2140623010644
      },
      {
        "ShowGeometry": true,
        "Name": "Sequence",
        "Id": "68da1a1eea3440ad8e3781edaccddf88",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1040.8992455822897,
        "Y": 585.65100917825055
      },
      {
        "ShowGeometry": true,
        "Name": "Space",
        "Id": "291c06515d5e4bd0acae1a2f586dccf7",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -357.22198213038746,
        "Y": 708.80074961429989
      },
      {
        "ShowGeometry": true,
        "Name": "Point.ByCoordinates",
        "Id": "7117c1db273543e7a0acc0d40a5bd876",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2038.7354837287692,
        "Y": 417.61374620037168
      },
      {
        "ShowGeometry": true,
        "Name": "Floor.ByOutlineTypeAndLevel",
        "Id": "7b20b0a278864d52a4f67ab91c2a30af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5158.6134375262518,
        "Y": 1294.5849125559539
      },
      {
        "ShowGeometry": true,
        "Name": "Levels",
        "Id": "76d5f937bee34a7fa9f9c95907a24ce5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4834.6134375262518,
        "Y": 1374.5849125559539
      },
      {
        "ShowGeometry": true,
        "Name": "Rectangle.ByCornerPoints",
        "Id": "c5afad838cc847289e245af87bcf6313",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4518.6134375262518,
        "Y": 1266.5849125559539
      },
      {
        "ShowGeometry": true,
        "Name": "List Create",
        "Id": "c96563fcaab64120a68ecca1f9250fa1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3747.6134375262518,
        "Y": 1266.5849125559539
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0ff914c08c37419eaaafbcb710868b3b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3244.6134375262518,
        "Y": 1171.224912555954
      },
      {
        "ShowGeometry": true,
        "Name": "Point.ByCoordinates",
        "Id": "8a31958c6ade403d87ade55517941cf6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3490.6134375262518,
        "Y": 1158.5849125559539
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "5197dacf8d744df08bcc9ffab099406e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3967.6134375262518,
        "Y": 1266.5849125559539
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e47cfb63755443359fc53eae9952c528",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3244.6134375262518,
        "Y": 1331.224912555954
      },
      {
        "ShowGeometry": true,
        "Name": "Point.ByCoordinates",
        "Id": "bc9da5b0ec514e6ab477e3463002b14f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3490.6134375262518,
        "Y": 1318.5849125559539
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b9f03610ba83430aae100ff838ce0412",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3244.6134375262518,
        "Y": 1491.224912555954
      },
      {
        "ShowGeometry": true,
        "Name": "Point.ByCoordinates",
        "Id": "e2106c4deee24ee3b85854fc557e7034",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3490.6134375262518,
        "Y": 1478.5849125559539
      },
      {
        "ShowGeometry": true,
        "Name": "Size of Square",
        "Id": "cc34f40c892c496192b0aefdb414a56b",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1936.2480755549168,
        "Y": 1691.7765988988551
      },
      {
        "ShowGeometry": true,
        "Name": "PolyCurve.Curves",
        "Id": "bf0fefe383d849d68bfe8de80b6ea306",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4834.6134375262518,
        "Y": 1266.5849125559539
      },
      {
        "ShowGeometry": true,
        "Name": "Select location line",
        "Id": "b4fac64e188041a6b74a308d68a342d1",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -354.568533566159,
        "Y": 1302.7000819883592
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Geometry",
        "Id": "03c6901a3a6c4fbd8766ec771118873b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -79.568533566158976,
        "Y": 1302.7000819883592
      },
      {
        "ShowGeometry": true,
        "Name": "Curve.StartPoint",
        "Id": "c5d2765e0fa148e1a82823b2f7e77ae4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 220.43146643384102,
        "Y": 1302.7000819883592
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e0ed7cf58c5b4792b1d6482c6b45803d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1269.2849299113648,
        "Y": 744.37447093177059
      },
      {
        "ShowGeometry": true,
        "Name": "+",
        "Id": "cf552aede4274588a22ca9354a0b07bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1512.7354837287692,
        "Y": 417.61374620037168
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "19aaacfe55e844d08399f700e1fedadd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1757.7354837287692,
        "Y": 417.61374620037168
      },
      {
        "ShowGeometry": true,
        "Name": "+",
        "Id": "65ef2a23de83497c807bb3ed033cf8c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1514.7236544942784,
        "Y": 576.58519090088373
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "03bb188fc5f64b17ba3734440aff980d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1752.7025331311297,
        "Y": 565.496785231178
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "1963a084dbf3431993d0e25f8298a73e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2902.2575554977457,
        "Y": 1134.19452389117
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "7c0de710b6834903bd349d1880783e34",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2621.2575554977457,
        "Y": 1134.1945238911699
      },
      {
        "ShowGeometry": true,
        "Name": "List.TakeItems",
        "Id": "7dd4f106047c43c88065ad1b692ae068",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4234.6134375262518,
        "Y": 1266.5849125559539
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "602dfd817348485685972c28769b7342",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1260.30465943367,
        "Y": 642.84473600764909
      },
      {
        "ShowGeometry": true,
        "Name": "Curve.SegmentLengthAtParameter",
        "Id": "e28e8d7e93bc438c9697721c67592a54",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 229.1189741136368,
        "Y": 1423.8160633474595
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "97e21d052db1488d8ee524da10b2db43",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 81.0,
        "Y": 1479.0
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c461dd1e5c724c69b1f454f24ef34729",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 597.26906700709992,
        "Y": 1432.4359330721268
      },
      {
        "ShowGeometry": true,
        "Name": "Math.Floor",
        "Id": "ac7bfc7219914b6eb80c88dd0cf4bfd4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 767.14506758759046,
        "Y": 1438.3528905342068
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "765bfe9d89ea4240a9dd3602ca651d46",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2354.2575554977457,
        "Y": 1134.1945238911699
      }
    ],
    "Annotations": [
      {
        "Id": "061de4b0da9940afa29a69aaac5addf8",
        "Title": "<Click here to edit the group title>",
        "Nodes": [
          "7117c1db273543e7a0acc0d40a5bd876",
          "cf552aede4274588a22ca9354a0b07bc",
          "19aaacfe55e844d08399f700e1fedadd",
          "65ef2a23de83497c807bb3ed033cf8c0"
        ],
        "Left": 1502.7354837287692,
        "Top": 364.61374620037168,
        "Width": 703.00000000000023,
        "Height": 330.97144470051205,
        "FontSize": 36.0,
        "InitialTop": 417.61374620037168,
        "InitialHeight": 688.42641219599773,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "32214f49ffd64645b2af8982de39cb75",
        "Title": "<Click here to edit the group title>",
        "Nodes": [
          "c96563fcaab64120a68ecca1f9250fa1",
          "0ff914c08c37419eaaafbcb710868b3b",
          "5197dacf8d744df08bcc9ffab099406e",
          "e47cfb63755443359fc53eae9952c528",
          "bc9da5b0ec514e6ab477e3463002b14f",
          "b9f03610ba83430aae100ff838ce0412",
          "e2106c4deee24ee3b85854fc557e7034",
          "7dd4f106047c43c88065ad1b692ae068",
          "c5afad838cc847289e245af87bcf6313",
          "76d5f937bee34a7fa9f9c95907a24ce5",
          "bf0fefe383d849d68bfe8de80b6ea306",
          "7b20b0a278864d52a4f67ab91c2a30af",
          "8a31958c6ade403d87ade55517941cf6"
        ],
        "Left": 3234.6134375262518,
        "Top": 1105.5849125559539,
        "Width": 2168.0,
        "Height": 518.0,
        "FontSize": 36.0,
        "InitialTop": 1158.5849125559539,
        "InitialHeight": 482.3599999999999,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b4fdfe2dfe044ac5b7f4f5209e2bd78c",
        "Title": "<Click here to edit the group title>",
        "Nodes": [
          "7b20b0a278864d52a4f67ab91c2a30af",
          "76d5f937bee34a7fa9f9c95907a24ce5",
          "c5afad838cc847289e245af87bcf6313",
          "bf0fefe383d849d68bfe8de80b6ea306",
          "7dd4f106047c43c88065ad1b692ae068"
        ],
        "Left": 4224.6134375262518,
        "Top": 1213.5849125559539,
        "Width": 1178.0,
        "Height": 254.0,
        "FontSize": 36.0,
        "InitialTop": 1266.5849125559539,
        "InitialHeight": 580.87639659080128,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 387.1476952813444,
    "Y": -50.603437180382628,
    "Zoom": 0.49150739987214315
  }
}